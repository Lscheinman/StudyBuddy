sudo apt-get update

sudo apt install python3-certbot-nginx

sudo apt-get install certbot

sudo ufw allow 80
sudo ufw allow 443
sudo ufw reload

sudo certbot --nginx -d intcitium.com -d www.intcitium.com



server {

    listen 8080;
    server_name intcitium.com www.intcitium.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    if ($host = www.intcitium.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = gqshop.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    
    return 404; # managed by Certbot
}


server {
    server_name intcitium.com www.intcitium.com;


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/intcitium.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/intcitium.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        root /var/www/frontend;
        try_files $uri $uri/ /index.html;
    }

}




version: "3"

services:
  frontend:
    networks:
      - gq_network
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - frontend:/app/build

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile.https
    ports:
      - 80:8080
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - static:/vol/static
      - frontend:/var/www/frontend
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot/:ro

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www/:/var/www/certbot/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  gq_network:
    driver: bridge

volumes:
  static:
  frontend: