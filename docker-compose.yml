version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: studybuddy-nginx
    ports:
      - "443:443" # HTTPS
      - "8080:80" # HTTP for testing
    volumes:
      - ./certs:/etc/ssl/certs # Mount certificates
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs/selfsigned.crt:/etc/ssl/certs/selfsigned.crt:ro
      - ./certs/selfsigned.key:/etc/ssl/certs/selfsigned.key:ro
    depends_on:
      - db
      - frontend
      - backend

  backend:
    build:
      context: ./studybuddy
      dockerfile: Dockerfile
    container_name: studybuddy-backend
    volumes:
      - ./studybuddy:/app
    env_file:
      - ./studybuddy/.env
    depends_on:
      - db
    expose:
      - 8000  # Exposed internally for Nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: studybuddy-frontend
    volumes:
      - ./frontend:/app
      - ./certs/selfsigned.crt:/etc/ssl/certs/selfsigned.crt:ro
      - ./certs/selfsigned.key:/etc/ssl/certs/selfsigned.key:ro
    depends_on:
      - backend
    expose:
      - 80  # Exposed internally for Nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    container_name: studybuddy-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"  # Consider removing or restricting in production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: studybuddy-nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/ssl/certs
      - ./letsencrypt:/etc/letsencrypt
      - ./letsencrypt-www:/var/www/certbot
      - ./letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    image: certbot/certbot
    container_name: studybuddy-certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./letsencrypt-www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --quiet; done"
    depends_on:
      - nginx

volumes:
  postgres_data:
